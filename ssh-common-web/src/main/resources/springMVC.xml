<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <import resource="classpath:spring-validation.xml"/>
    <import resource="classpath:spring-i18n.xml"/>

    <!-- 自动扫描带@Controller注解的Bean -->
    <context:component-scan base-package="com.ssh.*.web"/>

    <!-- 防止静态资源被拦截 -->
    <mvc:default-servlet-handler/>
    <!--<mvc:resources location="/assets/" mapping="/assets/**" />-->

    <!-- 配置视图解析器(物理视图=前缀+逻辑视图+后缀) -->
    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>
    <bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/html/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML5"/>
        <property name="cacheable" value="false"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    <!--
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="cache" value="false"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>
    -->

    <!-- 自动注入RequestMappingHandlerMapping和RequestMappingHandlerAdapter -->
    <mvc:annotation-driven conversion-service="conversionService" validator="validator">
        <mvc:message-converters>
            <!-- JSON日期类型转换 -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--配置注解映射器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->
    <!--配置注解适配器(HandlerAdapter会把Handler包装为适配器从而支持多种类型的Handler处理器)-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->

    <!--
    日期类型转换的三种方式:
    (1)在实体类中加日期格式化注解@DateTimeFormat(pattern = Constant.DATETIME_PATTERN);
    (2)定义一个实现Converter接口的全局日期类型转换器并在配置文件中进行配置;
    (3)使用@InitBinder注解.
    -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.ssh.common.web.servlet.converter.DateConverter"/>
            </set>
        </property>
    </bean>

    <!-- 配置JSON转换器(如果使用<mvc:annotation-driven />自动注入方式则不用配置) -->
    <!--
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    -->

    <!-- 配置文件上传解析器 -->
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="20480"/>
    </bean>
    <!--<bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>-->

    <!-- 配置拦截器: 多个拦截器顺序执行(/**表示拦截所有URL包括子URL路径) -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ssh.common.web.servlet.interceptor.AuditInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- ============================== Enabling Shiro Annotations ============================== -->

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--
    Spring AOP uses either JDK dynamic proxies or CGLIB to create the proxy.
    To force the use of CGLIB proxies set the value of the proxy-target-class attribute of the <aop:config> element to true.
    To force CGLIB proxying when using the @AspectJ autoproxy support, set the proxy-target-class attribute of the <aop:aspectj-autoproxy> element to true.
    -->
    <aop:config proxy-target-class="true"/>

</beans>
